#pragma warning disable 1591
//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace QuanLyNhanSu
{
	using System.Data.Linq;
	using System.Data.Linq.Mapping;
	using System.Data;
	using System.Collections.Generic;
	using System.Reflection;
	using System.Linq;
	using System.Linq.Expressions;
	using System.ComponentModel;
	using System;
	
	
	[global::System.Data.Linq.Mapping.DatabaseAttribute(Name="QuanLyLaoDong")]
	public partial class SqlDataContext : System.Data.Linq.DataContext
	{
		
		private static System.Data.Linq.Mapping.MappingSource mappingSource = new AttributeMappingSource();
		
    #region Extensibility Method Definitions
    partial void OnCreated();
    partial void InsertCongTrinh(CongTrinh instance);
    partial void UpdateCongTrinh(CongTrinh instance);
    partial void DeleteCongTrinh(CongTrinh instance);
    partial void InsertDangNhap(DangNhap instance);
    partial void UpdateDangNhap(DangNhap instance);
    partial void DeleteDangNhap(DangNhap instance);
    partial void InsertNhanVien(NhanVien instance);
    partial void UpdateNhanVien(NhanVien instance);
    partial void DeleteNhanVien(NhanVien instance);
    partial void InsertPhanCong(PhanCong instance);
    partial void UpdatePhanCong(PhanCong instance);
    partial void DeletePhanCong(PhanCong instance);
    partial void InsertPhanQuyen(PhanQuyen instance);
    partial void UpdatePhanQuyen(PhanQuyen instance);
    partial void DeletePhanQuyen(PhanQuyen instance);
    partial void InsertPhongBan(PhongBan instance);
    partial void UpdatePhongBan(PhongBan instance);
    partial void DeletePhongBan(PhongBan instance);
    #endregion
		
		public SqlDataContext() : 
				base(global::QuanLyNhanSu.Properties.Settings.Default.QuanLyLaoDongConnectionString, mappingSource)
		{
			OnCreated();
		}
		
		public SqlDataContext(string connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public SqlDataContext(System.Data.IDbConnection connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public SqlDataContext(string connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public SqlDataContext(System.Data.IDbConnection connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public System.Data.Linq.Table<CongTrinh> CongTrinhs
		{
			get
			{
				return this.GetTable<CongTrinh>();
			}
		}
		
		public System.Data.Linq.Table<DangNhap> DangNhaps
		{
			get
			{
				return this.GetTable<DangNhap>();
			}
		}
		
		public System.Data.Linq.Table<NhanVien> NhanViens
		{
			get
			{
				return this.GetTable<NhanVien>();
			}
		}
		
		public System.Data.Linq.Table<PhanCong> PhanCongs
		{
			get
			{
				return this.GetTable<PhanCong>();
			}
		}
		
		public System.Data.Linq.Table<PhanQuyen> PhanQuyens
		{
			get
			{
				return this.GetTable<PhanQuyen>();
			}
		}
		
		public System.Data.Linq.Table<PhongBan> PhongBans
		{
			get
			{
				return this.GetTable<PhongBan>();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.CongTrinh")]
	public partial class CongTrinh : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _id_CongTrinh;
		
		private string _tenCongTrinh;
		
		private string _diaDiem;
		
		private System.Nullable<System.DateTime> _ngayKhoiCong;
		
		private System.Nullable<System.DateTime> _ngayHoanThanh;
		
		private EntitySet<PhanCong> _PhanCongs;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void Onid_CongTrinhChanging(string value);
    partial void Onid_CongTrinhChanged();
    partial void OntenCongTrinhChanging(string value);
    partial void OntenCongTrinhChanged();
    partial void OndiaDiemChanging(string value);
    partial void OndiaDiemChanged();
    partial void OnngayKhoiCongChanging(System.Nullable<System.DateTime> value);
    partial void OnngayKhoiCongChanged();
    partial void OnngayHoanThanhChanging(System.Nullable<System.DateTime> value);
    partial void OnngayHoanThanhChanged();
    #endregion
		
		public CongTrinh()
		{
			this._PhanCongs = new EntitySet<PhanCong>(new Action<PhanCong>(this.attach_PhanCongs), new Action<PhanCong>(this.detach_PhanCongs));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_id_CongTrinh", DbType="NChar(10) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string id_CongTrinh
		{
			get
			{
				return this._id_CongTrinh;
			}
			set
			{
				if ((this._id_CongTrinh != value))
				{
					this.Onid_CongTrinhChanging(value);
					this.SendPropertyChanging();
					this._id_CongTrinh = value;
					this.SendPropertyChanged("id_CongTrinh");
					this.Onid_CongTrinhChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_tenCongTrinh", DbType="NVarChar(50)")]
		public string tenCongTrinh
		{
			get
			{
				return this._tenCongTrinh;
			}
			set
			{
				if ((this._tenCongTrinh != value))
				{
					this.OntenCongTrinhChanging(value);
					this.SendPropertyChanging();
					this._tenCongTrinh = value;
					this.SendPropertyChanged("tenCongTrinh");
					this.OntenCongTrinhChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_diaDiem", DbType="NVarChar(50)")]
		public string diaDiem
		{
			get
			{
				return this._diaDiem;
			}
			set
			{
				if ((this._diaDiem != value))
				{
					this.OndiaDiemChanging(value);
					this.SendPropertyChanging();
					this._diaDiem = value;
					this.SendPropertyChanged("diaDiem");
					this.OndiaDiemChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ngayKhoiCong", DbType="Date")]
		public System.Nullable<System.DateTime> ngayKhoiCong
		{
			get
			{
				return this._ngayKhoiCong;
			}
			set
			{
				if ((this._ngayKhoiCong != value))
				{
					this.OnngayKhoiCongChanging(value);
					this.SendPropertyChanging();
					this._ngayKhoiCong = value;
					this.SendPropertyChanged("ngayKhoiCong");
					this.OnngayKhoiCongChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ngayHoanThanh", DbType="Date")]
		public System.Nullable<System.DateTime> ngayHoanThanh
		{
			get
			{
				return this._ngayHoanThanh;
			}
			set
			{
				if ((this._ngayHoanThanh != value))
				{
					this.OnngayHoanThanhChanging(value);
					this.SendPropertyChanging();
					this._ngayHoanThanh = value;
					this.SendPropertyChanged("ngayHoanThanh");
					this.OnngayHoanThanhChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="CongTrinh_PhanCong", Storage="_PhanCongs", ThisKey="id_CongTrinh", OtherKey="id_CongTrinh")]
		public EntitySet<PhanCong> PhanCongs
		{
			get
			{
				return this._PhanCongs;
			}
			set
			{
				this._PhanCongs.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_PhanCongs(PhanCong entity)
		{
			this.SendPropertyChanging();
			entity.CongTrinh = this;
		}
		
		private void detach_PhanCongs(PhanCong entity)
		{
			this.SendPropertyChanging();
			entity.CongTrinh = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.DangNhap")]
	public partial class DangNhap : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _ID;
		
		private string _User;
		
		private string _Pass;
		
		private EntitySet<PhanQuyen> _PhanQuyens;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(string value);
    partial void OnIDChanged();
    partial void OnUserChanging(string value);
    partial void OnUserChanged();
    partial void OnPassChanging(string value);
    partial void OnPassChanged();
    #endregion
		
		public DangNhap()
		{
			this._PhanQuyens = new EntitySet<PhanQuyen>(new Action<PhanQuyen>(this.attach_PhanQuyens), new Action<PhanQuyen>(this.detach_PhanQuyens));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", DbType="NChar(10) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Name="[User]", Storage="_User", DbType="NVarChar(50)")]
		public string User
		{
			get
			{
				return this._User;
			}
			set
			{
				if ((this._User != value))
				{
					this.OnUserChanging(value);
					this.SendPropertyChanging();
					this._User = value;
					this.SendPropertyChanged("User");
					this.OnUserChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Pass", DbType="NVarChar(50)")]
		public string Pass
		{
			get
			{
				return this._Pass;
			}
			set
			{
				if ((this._Pass != value))
				{
					this.OnPassChanging(value);
					this.SendPropertyChanging();
					this._Pass = value;
					this.SendPropertyChanged("Pass");
					this.OnPassChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="DangNhap_PhanQuyen", Storage="_PhanQuyens", ThisKey="ID", OtherKey="id_PhanQuyen")]
		public EntitySet<PhanQuyen> PhanQuyens
		{
			get
			{
				return this._PhanQuyens;
			}
			set
			{
				this._PhanQuyens.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_PhanQuyens(PhanQuyen entity)
		{
			this.SendPropertyChanging();
			entity.DangNhap = this;
		}
		
		private void detach_PhanQuyens(PhanQuyen entity)
		{
			this.SendPropertyChanging();
			entity.DangNhap = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.NhanVien")]
	public partial class NhanVien : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _id_NhanVien;
		
		private string _id_PhongBan;
		
		private string _tenNhanVien;
		
		private System.Nullable<System.DateTime> _ngaySinh;
		
		private System.Nullable<bool> _gioiTinh;
		
		private string _diaChi;
		
		private System.Nullable<decimal> _luongNhanVien;
		
		private EntitySet<PhanCong> _PhanCongs;
		
		private EntityRef<PhanQuyen> _PhanQuyen;
		
		private EntityRef<PhongBan> _PhongBan;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void Onid_NhanVienChanging(string value);
    partial void Onid_NhanVienChanged();
    partial void Onid_PhongBanChanging(string value);
    partial void Onid_PhongBanChanged();
    partial void OntenNhanVienChanging(string value);
    partial void OntenNhanVienChanged();
    partial void OnngaySinhChanging(System.Nullable<System.DateTime> value);
    partial void OnngaySinhChanged();
    partial void OngioiTinhChanging(System.Nullable<bool> value);
    partial void OngioiTinhChanged();
    partial void OndiaChiChanging(string value);
    partial void OndiaChiChanged();
    partial void OnluongNhanVienChanging(System.Nullable<decimal> value);
    partial void OnluongNhanVienChanged();
    #endregion
		
		public NhanVien()
		{
			this._PhanCongs = new EntitySet<PhanCong>(new Action<PhanCong>(this.attach_PhanCongs), new Action<PhanCong>(this.detach_PhanCongs));
			this._PhanQuyen = default(EntityRef<PhanQuyen>);
			this._PhongBan = default(EntityRef<PhongBan>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_id_NhanVien", DbType="NChar(10) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string id_NhanVien
		{
			get
			{
				return this._id_NhanVien;
			}
			set
			{
				if ((this._id_NhanVien != value))
				{
					this.Onid_NhanVienChanging(value);
					this.SendPropertyChanging();
					this._id_NhanVien = value;
					this.SendPropertyChanged("id_NhanVien");
					this.Onid_NhanVienChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_id_PhongBan", DbType="NChar(10)")]
		public string id_PhongBan
		{
			get
			{
				return this._id_PhongBan;
			}
			set
			{
				if ((this._id_PhongBan != value))
				{
					if (this._PhongBan.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.Onid_PhongBanChanging(value);
					this.SendPropertyChanging();
					this._id_PhongBan = value;
					this.SendPropertyChanged("id_PhongBan");
					this.Onid_PhongBanChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_tenNhanVien", DbType="NVarChar(50)")]
		public string tenNhanVien
		{
			get
			{
				return this._tenNhanVien;
			}
			set
			{
				if ((this._tenNhanVien != value))
				{
					this.OntenNhanVienChanging(value);
					this.SendPropertyChanging();
					this._tenNhanVien = value;
					this.SendPropertyChanged("tenNhanVien");
					this.OntenNhanVienChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ngaySinh", DbType="Date")]
		public System.Nullable<System.DateTime> ngaySinh
		{
			get
			{
				return this._ngaySinh;
			}
			set
			{
				if ((this._ngaySinh != value))
				{
					this.OnngaySinhChanging(value);
					this.SendPropertyChanging();
					this._ngaySinh = value;
					this.SendPropertyChanged("ngaySinh");
					this.OnngaySinhChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_gioiTinh", DbType="Bit")]
		public System.Nullable<bool> gioiTinh
		{
			get
			{
				return this._gioiTinh;
			}
			set
			{
				if ((this._gioiTinh != value))
				{
					this.OngioiTinhChanging(value);
					this.SendPropertyChanging();
					this._gioiTinh = value;
					this.SendPropertyChanged("gioiTinh");
					this.OngioiTinhChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_diaChi", DbType="NChar(10)")]
		public string diaChi
		{
			get
			{
				return this._diaChi;
			}
			set
			{
				if ((this._diaChi != value))
				{
					this.OndiaChiChanging(value);
					this.SendPropertyChanging();
					this._diaChi = value;
					this.SendPropertyChanged("diaChi");
					this.OndiaChiChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_luongNhanVien", DbType="Decimal(18,0)")]
		public System.Nullable<decimal> luongNhanVien
		{
			get
			{
				return this._luongNhanVien;
			}
			set
			{
				if ((this._luongNhanVien != value))
				{
					this.OnluongNhanVienChanging(value);
					this.SendPropertyChanging();
					this._luongNhanVien = value;
					this.SendPropertyChanged("luongNhanVien");
					this.OnluongNhanVienChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="NhanVien_PhanCong", Storage="_PhanCongs", ThisKey="id_NhanVien", OtherKey="id_NhanVien")]
		public EntitySet<PhanCong> PhanCongs
		{
			get
			{
				return this._PhanCongs;
			}
			set
			{
				this._PhanCongs.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="NhanVien_PhanQuyen", Storage="_PhanQuyen", ThisKey="id_NhanVien", OtherKey="id_NhanVien", IsUnique=true, IsForeignKey=false)]
		public PhanQuyen PhanQuyen
		{
			get
			{
				return this._PhanQuyen.Entity;
			}
			set
			{
				PhanQuyen previousValue = this._PhanQuyen.Entity;
				if (((previousValue != value) 
							|| (this._PhanQuyen.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._PhanQuyen.Entity = null;
						previousValue.NhanVien = null;
					}
					this._PhanQuyen.Entity = value;
					if ((value != null))
					{
						value.NhanVien = this;
					}
					this.SendPropertyChanged("PhanQuyen");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="PhongBan_NhanVien", Storage="_PhongBan", ThisKey="id_PhongBan", OtherKey="id_PhongBan", IsForeignKey=true)]
		public PhongBan PhongBan
		{
			get
			{
				return this._PhongBan.Entity;
			}
			set
			{
				PhongBan previousValue = this._PhongBan.Entity;
				if (((previousValue != value) 
							|| (this._PhongBan.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._PhongBan.Entity = null;
						previousValue.NhanViens.Remove(this);
					}
					this._PhongBan.Entity = value;
					if ((value != null))
					{
						value.NhanViens.Add(this);
						this._id_PhongBan = value.id_PhongBan;
					}
					else
					{
						this._id_PhongBan = default(string);
					}
					this.SendPropertyChanged("PhongBan");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_PhanCongs(PhanCong entity)
		{
			this.SendPropertyChanging();
			entity.NhanVien = this;
		}
		
		private void detach_PhanCongs(PhanCong entity)
		{
			this.SendPropertyChanging();
			entity.NhanVien = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.PhanCong")]
	public partial class PhanCong : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _id_PhanCong;
		
		private string _id_CongTrinh;
		
		private string _id_NhanVien;
		
		private EntityRef<CongTrinh> _CongTrinh;
		
		private EntityRef<NhanVien> _NhanVien;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void Onid_PhanCongChanging(string value);
    partial void Onid_PhanCongChanged();
    partial void Onid_CongTrinhChanging(string value);
    partial void Onid_CongTrinhChanged();
    partial void Onid_NhanVienChanging(string value);
    partial void Onid_NhanVienChanged();
    #endregion
		
		public PhanCong()
		{
			this._CongTrinh = default(EntityRef<CongTrinh>);
			this._NhanVien = default(EntityRef<NhanVien>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_id_PhanCong", DbType="NChar(10) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string id_PhanCong
		{
			get
			{
				return this._id_PhanCong;
			}
			set
			{
				if ((this._id_PhanCong != value))
				{
					this.Onid_PhanCongChanging(value);
					this.SendPropertyChanging();
					this._id_PhanCong = value;
					this.SendPropertyChanged("id_PhanCong");
					this.Onid_PhanCongChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_id_CongTrinh", DbType="NChar(10)")]
		public string id_CongTrinh
		{
			get
			{
				return this._id_CongTrinh;
			}
			set
			{
				if ((this._id_CongTrinh != value))
				{
					if (this._CongTrinh.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.Onid_CongTrinhChanging(value);
					this.SendPropertyChanging();
					this._id_CongTrinh = value;
					this.SendPropertyChanged("id_CongTrinh");
					this.Onid_CongTrinhChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_id_NhanVien", DbType="NChar(10)")]
		public string id_NhanVien
		{
			get
			{
				return this._id_NhanVien;
			}
			set
			{
				if ((this._id_NhanVien != value))
				{
					if (this._NhanVien.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.Onid_NhanVienChanging(value);
					this.SendPropertyChanging();
					this._id_NhanVien = value;
					this.SendPropertyChanged("id_NhanVien");
					this.Onid_NhanVienChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="CongTrinh_PhanCong", Storage="_CongTrinh", ThisKey="id_CongTrinh", OtherKey="id_CongTrinh", IsForeignKey=true)]
		public CongTrinh CongTrinh
		{
			get
			{
				return this._CongTrinh.Entity;
			}
			set
			{
				CongTrinh previousValue = this._CongTrinh.Entity;
				if (((previousValue != value) 
							|| (this._CongTrinh.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._CongTrinh.Entity = null;
						previousValue.PhanCongs.Remove(this);
					}
					this._CongTrinh.Entity = value;
					if ((value != null))
					{
						value.PhanCongs.Add(this);
						this._id_CongTrinh = value.id_CongTrinh;
					}
					else
					{
						this._id_CongTrinh = default(string);
					}
					this.SendPropertyChanged("CongTrinh");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="NhanVien_PhanCong", Storage="_NhanVien", ThisKey="id_NhanVien", OtherKey="id_NhanVien", IsForeignKey=true)]
		public NhanVien NhanVien
		{
			get
			{
				return this._NhanVien.Entity;
			}
			set
			{
				NhanVien previousValue = this._NhanVien.Entity;
				if (((previousValue != value) 
							|| (this._NhanVien.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._NhanVien.Entity = null;
						previousValue.PhanCongs.Remove(this);
					}
					this._NhanVien.Entity = value;
					if ((value != null))
					{
						value.PhanCongs.Add(this);
						this._id_NhanVien = value.id_NhanVien;
					}
					else
					{
						this._id_NhanVien = default(string);
					}
					this.SendPropertyChanged("NhanVien");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.PhanQuyen")]
	public partial class PhanQuyen : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _id_NhanVien;
		
		private string _Caption;
		
		private string _id_PhanQuyen;
		
		private EntityRef<DangNhap> _DangNhap;
		
		private EntityRef<NhanVien> _NhanVien;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void Onid_NhanVienChanging(string value);
    partial void Onid_NhanVienChanged();
    partial void OnCaptionChanging(string value);
    partial void OnCaptionChanged();
    partial void Onid_PhanQuyenChanging(string value);
    partial void Onid_PhanQuyenChanged();
    #endregion
		
		public PhanQuyen()
		{
			this._DangNhap = default(EntityRef<DangNhap>);
			this._NhanVien = default(EntityRef<NhanVien>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_id_NhanVien", DbType="NChar(10) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string id_NhanVien
		{
			get
			{
				return this._id_NhanVien;
			}
			set
			{
				if ((this._id_NhanVien != value))
				{
					if (this._NhanVien.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.Onid_NhanVienChanging(value);
					this.SendPropertyChanging();
					this._id_NhanVien = value;
					this.SendPropertyChanged("id_NhanVien");
					this.Onid_NhanVienChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Caption", DbType="NVarChar(200)")]
		public string Caption
		{
			get
			{
				return this._Caption;
			}
			set
			{
				if ((this._Caption != value))
				{
					this.OnCaptionChanging(value);
					this.SendPropertyChanging();
					this._Caption = value;
					this.SendPropertyChanged("Caption");
					this.OnCaptionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_id_PhanQuyen", DbType="NChar(10)")]
		public string id_PhanQuyen
		{
			get
			{
				return this._id_PhanQuyen;
			}
			set
			{
				if ((this._id_PhanQuyen != value))
				{
					if (this._DangNhap.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.Onid_PhanQuyenChanging(value);
					this.SendPropertyChanging();
					this._id_PhanQuyen = value;
					this.SendPropertyChanged("id_PhanQuyen");
					this.Onid_PhanQuyenChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="DangNhap_PhanQuyen", Storage="_DangNhap", ThisKey="id_PhanQuyen", OtherKey="ID", IsForeignKey=true)]
		public DangNhap DangNhap
		{
			get
			{
				return this._DangNhap.Entity;
			}
			set
			{
				DangNhap previousValue = this._DangNhap.Entity;
				if (((previousValue != value) 
							|| (this._DangNhap.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._DangNhap.Entity = null;
						previousValue.PhanQuyens.Remove(this);
					}
					this._DangNhap.Entity = value;
					if ((value != null))
					{
						value.PhanQuyens.Add(this);
						this._id_PhanQuyen = value.ID;
					}
					else
					{
						this._id_PhanQuyen = default(string);
					}
					this.SendPropertyChanged("DangNhap");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="NhanVien_PhanQuyen", Storage="_NhanVien", ThisKey="id_NhanVien", OtherKey="id_NhanVien", IsForeignKey=true)]
		public NhanVien NhanVien
		{
			get
			{
				return this._NhanVien.Entity;
			}
			set
			{
				NhanVien previousValue = this._NhanVien.Entity;
				if (((previousValue != value) 
							|| (this._NhanVien.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._NhanVien.Entity = null;
						previousValue.PhanQuyen = null;
					}
					this._NhanVien.Entity = value;
					if ((value != null))
					{
						value.PhanQuyen = this;
						this._id_NhanVien = value.id_NhanVien;
					}
					else
					{
						this._id_NhanVien = default(string);
					}
					this.SendPropertyChanged("NhanVien");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.PhongBan")]
	public partial class PhongBan : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _id_PhongBan;
		
		private string _tenPhongBan;
		
		private EntitySet<NhanVien> _NhanViens;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void Onid_PhongBanChanging(string value);
    partial void Onid_PhongBanChanged();
    partial void OntenPhongBanChanging(string value);
    partial void OntenPhongBanChanged();
    #endregion
		
		public PhongBan()
		{
			this._NhanViens = new EntitySet<NhanVien>(new Action<NhanVien>(this.attach_NhanViens), new Action<NhanVien>(this.detach_NhanViens));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_id_PhongBan", DbType="NChar(10) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string id_PhongBan
		{
			get
			{
				return this._id_PhongBan;
			}
			set
			{
				if ((this._id_PhongBan != value))
				{
					this.Onid_PhongBanChanging(value);
					this.SendPropertyChanging();
					this._id_PhongBan = value;
					this.SendPropertyChanged("id_PhongBan");
					this.Onid_PhongBanChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_tenPhongBan", DbType="NVarChar(50)")]
		public string tenPhongBan
		{
			get
			{
				return this._tenPhongBan;
			}
			set
			{
				if ((this._tenPhongBan != value))
				{
					this.OntenPhongBanChanging(value);
					this.SendPropertyChanging();
					this._tenPhongBan = value;
					this.SendPropertyChanged("tenPhongBan");
					this.OntenPhongBanChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="PhongBan_NhanVien", Storage="_NhanViens", ThisKey="id_PhongBan", OtherKey="id_PhongBan")]
		public EntitySet<NhanVien> NhanViens
		{
			get
			{
				return this._NhanViens;
			}
			set
			{
				this._NhanViens.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_NhanViens(NhanVien entity)
		{
			this.SendPropertyChanging();
			entity.PhongBan = this;
		}
		
		private void detach_NhanViens(NhanVien entity)
		{
			this.SendPropertyChanging();
			entity.PhongBan = null;
		}
	}
}
#pragma warning restore 1591
